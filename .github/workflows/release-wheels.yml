name: Release Wheels

on:
  workflow_dispatch:
  push:
    tags:
      - "v*"

jobs:
  build-wheels:
    name: Build wheels (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Sync tokenizer data
        run: python scripts/sync_tokenizer_data.py

      - name: Build wheels with maturin (manylinux2014)
        if: matrix.os == 'ubuntu-latest'
        uses: PyO3/maturin-action@v1
        with:
          command: build
          args: --release -o dist
          manylinux: "2014"
          working-directory: python

      - name: Build wheels with maturin (native)
        if: matrix.os != 'ubuntu-latest'
        uses: PyO3/maturin-action@v1
        with:
          command: build
          args: --release -o dist
          working-directory: python

      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}
          path: python/dist/*.whl

  build-sdist:
    runs-on: ubuntu-latest
    needs: build-wheels

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Sync tokenizer data
        run: python scripts/sync_tokenizer_data.py

      - name: Build source distribution
        uses: PyO3/maturin-action@v1
        with:
          command: sdist
          args: --out dist
          working-directory: python

      - name: Upload sdist
        uses: actions/upload-artifact@v4
        with:
          name: sdist
          path: python/dist/*.tar.gz
